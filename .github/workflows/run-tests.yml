# This is a basic workflow to help you get started with Actions

name: run-tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up R 3.6.1
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: '3.6.1'
      - name: Install dependencies
        shell: Rscript {0}
        run: |
          install.packages(c("rcarbon","testthat","argparser"))

      - name: Testthat
        shell: Rscript {0}
        run: |
          library(testthat)
          test_file("tests/testthat/test_myfunctions.R",reporter="fail")

      - name: Set up Python 3.8.5
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest numpy scipy scikit-allel pandas
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Test with pytest
        run: |
          pytest python/myfun.py          
          
